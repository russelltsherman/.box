#!/usr/bin/env bash

source $BOXROOTDIR/dotfiles/.lib_sh/functions.sh

usage() {
  echo "usage: box node [project_name] [node_version]"
  echo
}

main() {
  banner
  local project_name=$1
  local version=$2

  running "create project directory"
  mkdir -p $project_name
  ok

  running "initialize git"
  ( cd $project_name && git init &>/dev/null )
  gibo node > $project_name/.gitignore
  cp $BOXROOTDIR/lib/gitattributes_template $project_name/.gitattributes
  ok

  running "write .editorconfig"
  cp $BOXROOTDIR/lib/editorconfig_template $project_name/.editorconfig
  ok

  running "write .eslintconfig"
  cp $BOXROOTDIR/lib/eslintrc_template $project_name/.eslintrc.json
  gibo node > $project_name/.eslintignore
  ok

  running "write README.md"
  echo "
# $project_name

[![Build Status][build-badge]][build-url]
[![Coverage Status][coverage-badge]][coverage-url]
[![Dependency Status][dependency-badge]][dependency-url]
[![Known Vulnerabilities][vulnerability-badge]][vulnerability-url]
[![Google - JavaScript Style Guide][style-badge]][style-url]

[build-badge]: https://travis-ci.org/BurnerDev/$project_name.svg?branch=master
[build-url]: https://travis-ci.org/BurnerDev/$project_name
[coverage-badge]: https://img.shields.io/codecov/c/github/BurnerDev/$project_name.svg?style=flat-square
[coverage-url]: https://codecov.io/gh/BurnerDev/$project_name?branch=master
[dependency-badge]: https://david-dm.org/BurnerDev/$project_name.svg
[dependency-url]: https://david-dm.org/BurnerDev/$project_name.svg
[vulnerability-badge]: https://snyk.io/test/github/BurnerDev/$project_name/badge.svg
[vulnerability-url]: https://snyk.io/test/github/BurnerDev/$project_name
[style-badge]: https://img.shields.io/badge/code%20style-google-brightgreen.svg?style=flat-square
[style-url]: https://google.github.io/styleguide/jsguide.html
" > $project_name/README.md
  ok

  running "write TODO.md"
  echo "# $project_name" > $project_name/TODO.md
  ok

  running "write autoenv files"
  touch $project_name/.env
  echo "
nvm use $version
export OLDPATH=\$PATH
export PATH=\`pwd\`/node_modules/.bin:\$PATH
" > $project_name/.env

  touch $project_name/.out
  echo "
nvm use system
export PATH=\$OLDPATH
" > $project_name/.out
  ok

  running "write .travis.yml"
  touch $project_name/.travis.yml
  echo "
language: node_js
node_js:
  - \"7\"
after_script:
  - npm install codecov
  - NODE_ENV=test ./node_modules/.bin/nyc report --reporter=lcov > coverage.lcov
  - ./node_modules/.bin/codecov
" > $project_name/.travis.yml
  ok

  running "initialize app"
  ( cd $project_name && mkdir test )
  ( cd $project_name && touch test/$project_name.spec.js )
  ( cd $project_name && touch index.js )
  ok

  running "initialize yarn"
  ( cd $project_name && yarn init )
  ok

  running "initialize dev dependencies"
  ( cd $project_name && yarn add mocha chai supertest nyc sinon sinon-chai eslint eslint-config-google )
  ok

  running "initial git commit"
  ( cd $project_name && git add . && git commit -a -m 'initial commit' )
  ok
}

# for examples of providing tab completion suggestions see:
# https://github.com/zsh-users/zsh-completions/blob/master/zsh-completions-howto.org
# _cmd_node() {
#   _alternative "node_version:NodeJS Version:(4.7.2 5.12.0 6.9.4 7.2.0)"
# }

cmd_node() {
  if [ "$#" -lt 2 ]; then # called with no parameters
    usage; exit 0

  elif [ "$#" -eq 2 ]; then # called with 2 parameters
    main "$@"; exit 0
  fi

  usage; exit 1
}

# cmd_node "$@"
