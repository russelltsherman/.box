#!/usr/bin/env bash

source $BOXROOTDIR/dotfiles/.lib_sh/functions.sh

usage() {
  echo "usage: box python [project_name] [python_version]"
  echo
}

main() {
  banner
  local project_name=$1
  local version=$2

  ###########################################################
  action "create project directory"
    mkdir -p $project_name
  ok

  ###########################################################
  action "create virtual environment"
    pyenv virtualenv $version
  ok

  ###########################################################
  action "initialize"
    echo "$version" > $project_name/.python-version
    echo "$project_name" > $project_name/.python-virtualenv
    # create gitignore
    gibo python > $project_name/.gitignore
  ok

  action "Initialize GIT"
    ( cd $project_name && git init )
    gibo python > $project_name/.gitignore
    touch $project_name/.gitattributes
    echo "$GITATTRIBUTES" > $project_name/.gitattributes
  ok

  action "Initialize EDITORCONFIG"
    touch $project_name/.editorconfig
    echo "$EDITORCONFIG" > $project_name/.editorconfig
  ok

  # pyenv install 2.7.11
  # pyenv install 3.5.1
  # pyenv rehash

  # # list virtualenvs
  # pyenv virtualenvs

  # # create a new virtualenv
  # pyenv virtualenv $project_name

  # # destroy a  virtualenv
  # pyenv uninstall $project_name

  # # create a directory switch for a virtualenv
  # pyenv local $project_name

}

# for examples of providing tab completion suggestions see:
# https://github.com/zsh-users/zsh-completions/blob/master/zsh-completions-howto.org
# _cmd_python() {
# }

cmd_python() {
  if [ "$#" -lt 1 ]; then # called with no parameters
    usage; exit 0

  elif [ "$#" -gt 1 ]; then # called with gt 1 parameters
    main "$@"; exit 0

  elif [ "$#" -eq 1 ]; then # called with 1 parameters
    if [[ $1 == "help" ]]; then
      usage; exit 0
    fi

    main $1; exit 0
  fi

  usage; exit 1
}

# cmd_python "$@"
