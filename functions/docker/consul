#!/usr/bin/env bash

# shellcheck disable=SC1090
source "${BOXROOTDIR}/dotfiles/.lib_sh/functions.sh"

usage() {
  echo "usage: box consul"
  echo
}

main() {
  local container_name="consul"
  del_stopped $container_name
  # check if we passed args and if consul is running
  local state
  state=$(docker inspect --format "{{.State.Running}}" $container_name 2>/dev/null)
  if [[ "$state" == "true" ]] && [[ "$*" != "" ]]; then
    docker exec -it consul consul "$@"
    return 0
  fi

  docker run -d \
  --restart always \
  -v "${HOME}/.consul:/etc/consul.d" \
  -v /var/run/docker.sock:/var/run/docker.sock \
  --net host \
  -e GOMAXPROCS=2 \
  --name "$container_name" \
  "${DOCKER_REPO_PREFIX}/consul" agent \
  -bootstrap-expect 1 \
  -config-dir /etc/consul.d \
  -data-dir /data \
  -encrypt "$(docker run --rm "${DOCKER_REPO_PREFIX}/consul" keygen)" \
  -ui-dir /usr/src/consul \
  -server \
  -dc neverland \
  -bind 0.0.0.0

  hostess add consul "$(docker inspect --format '{{.NetworkSettings.Networks.bridge.IPAddress}}' consul)"
  browser-exec "http://consul:8500"
}

# _cmd_consul() {
# }

cmd_consul() {
  if [ "$#" -lt 1 ]; then # called with no parameters
    main; exit 0

  elif [ "$#" -eq 1 ]; then # called with 1 parameters
    if [[ "$1" == "help" ]]; then
      usage; exit 0
    fi

    main "$1"; exit 0
  fi

  usage; exit 1
}

# cmd_consul "$@"
