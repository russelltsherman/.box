#!/usr/bin/env bash

source $BOXROOTDIR/dotfiles/.lib_sh/functions.sh

usage() {
  echo "usage: box setup ssh"
  echo
}

main() {
  if [ ! -f ~/.ssh/id_rsa* ]; then
    bot "rsa key not present.. lets create one."

    local fullname=`osascript -e "long user name of (system info)"`

    if [[ -n "$fullname" ]];then
      local lastname=$(echo $fullname | awk '{print $2}');
      local firstname=$(echo $fullname | awk '{print $1}');
    fi

    local email=`dscl . -read /Users/$(whoami) | grep EMailAddress | sed "s/EMailAddress: //"`

    if [[ ! $email ]];then
      response='n'
    else
      echo -e "The best I can make out, your email address is $COL_YELLOW$email$COL_RESET"
      read -r -p "Is this correct? [Y|n] " response
    fi

    if [[ $response =~ ^(no|n|N) ]];then
      read -r -p "What is your email? " email
      if [[ ! $email ]];then
        error "you must provide an email to create an rsa key"
        exit 1
      fi
    fi

    running "create rsa key"
    ssh-keygen -t rsa -b 2048 -C "$email"; ok

    # Then add your new key to the ssh-agent:
    # start the ssh-agent in the background
    running "start ssh-agent in the background"
    eval "$(ssh-agent -s)"; ok

    running "adding yout key to the ssh-agent"
    ssh-add ~/.ssh/id_rsa; ok
  else
    bot "Looks like you already have rsa key"
  fi
}

# _cmd_ssh() {
# }

cmd_ssh() {
  if [ "$#" -lt 1 ]; then # called with no parameters
    main; exit 0

  elif [ "$#" -gt 1 ]; then # called with gt 1 parameters
    main "$@"; exit 0

  elif [ "$#" -eq 1 ]; then # called with 1 parameters
    if [[ $1 == "help" ]]; then
      usage; exit 0
    fi

    main $1; exit 0
  fi

  usage; exit 1
}

# cmd_ssh "$@"
