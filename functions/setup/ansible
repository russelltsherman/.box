#!/usr/bin/env bash

source $BOXROOTDIR/dotfiles/.lib_sh/functions.sh

usage() {
  echo "usage: box ansible"
  echo
}

main() {
  banner
  get_platform

  action "install ansible from source"
    git clone git://github.com/ansible/ansible.git --recursive
    cd ./ansible
    source ./hacking/env-setup
    # Once running the env-setup script youâ€™ll be running from checkout and the
    # default inventory file will be /etc/ansible/hosts. You can optionally specify
    # an inventory file (see Inventory) other than /etc/ansible/hosts:
    echo "127.0.0.1" > ~/ansible_hosts
    export ANSIBLE_INVENTORY=~/ansible_hosts
    ok

  action "add ansible to paths"
    profile_write '# add ansible git repo to paths' $HOME/.profile
    profile_write 'PATH=$PATH:~/ansible/bin:' $HOME/.profile
    profile_write 'PYTHONPATH=$PYTHONPATH:~/ansible/lib:' $HOME/.profile
    profile_write 'MANPATH=$MANPATH:!/ansible/docs/man' $HOME/.profile

  action "install python dependencies"
    sudo pip install --upgrade pip
    sudo pip install paramiko PyYAML Jinja2 httplib2 six
    ok

  action "install debops playbooks"
    sudo pip install debops netaddr passlib
    sudo debops-update
    ok

  action "create update script"
    touch ~/ansible/update
    chmod +x ~/ansible/update
    echo "#!/usr/bin/env bash" > ~/ansible/update
    echo "git pull --rebase" >> ~/ansible/update
    echo "git submodule update --init --recursive" >> ~/ansible/update
    ok
}

# _cmd_ansible() {
# }

cmd_ansible() {
  if [ "$#" -lt 1 ]; then # called with no parameters
    usage; exit 0

  elif [ "$#" -gt 1 ]; then # called with gt 1 parameters
    main "$@"; exit 0

  elif [ "$#" -eq 1 ]; then # called with 1 parameters
    if [[ $1 == "help" ]]; then
      usage; exit 0
    fi

    main $1; exit 0
  fi

  usage; exit 1
}

# cmd_ansible "$@"
