#!/usr/bin/env bash

source $BOXROOTDIR/dotfiles/.lib_sh/functions.sh

usage() {
  echo "usage: box git"
  echo
}

main() {
  banner
  get_platform
  bot "Installing Git"

  GITCONFIG=$BOXROOTDIR/dotfiles/.gitconfig
  grep 'user = GITHUBUSER' $GITCONFIG > /dev/null 2>&1
  if [[ $? = 0 ]]; then
      read -r -p "What is your github.com username? " githubuser

    fullname=`osascript -e "long user name of (system info)"`

    if [[ -n "$fullname" ]];then
      lastname=$(echo $fullname | awk '{print $2}');
      firstname=$(echo $fullname | awk '{print $1}');
    fi

    if [[ -z $lastname ]]; then
      lastname=`dscl . -read /Users/$(whoami) | grep LastName | sed "s/LastName: //"`
    fi

    if [[ -z $firstname ]]; then
      firstname=`dscl . -read /Users/$(whoami) | grep FirstName | sed "s/FirstName: //"`
    fi

    email=`dscl . -read /Users/$(whoami)  | grep EMailAddress | sed "s/EMailAddress: //"`

    if [[ ! "$firstname" ]];then
      response='n'
    else
      echo -e "I see that your full name is $COL_YELLOW$firstname $lastname$COL_RESET"
      read -r -p "Is this correct? [Y|n] " response
    fi

    if [[ $response =~ ^(no|n|N) ]];then
      read -r -p "What is your first name? " firstname
      read -r -p "What is your last name? " lastname
    fi
    fullname="$firstname $lastname"

    bot "Great $fullname, "

    if [[ ! $email ]];then
      response='n'
    else
      echo -e "The best I can make out, your email address is $COL_YELLOW$email$COL_RESET"
      read -r -p "Is this correct? [Y|n] " response
    fi

    if [[ $response =~ ^(no|n|N) ]];then
      read -r -p "What is your email? " email
      if [[ ! $email ]];then
        error "you must provide an email to configure .gitconfig"
        exit 1
      fi
    fi

    running "replacing items in .gitconfig with your info ($COL_YELLOW$fullname, $email, $githubuser$COL_RESET)"

    sed -i "s/GITHUBFULLNAME/$firstname $lastname/" $GITCONFIG > /dev/null 2>&1 | true
    if [[ ${PIPESTATUS[0]} != 0 ]]; then
      echo
      running "looks like you are using MacOS sed rather than gnu-sed, accommodating"
      sed -i '' "s/GITHUBFULLNAME/$firstname $lastname/" $GITCONFIG;
      sed -i '' 's/GITHUBEMAIL/'$email'/' $GITCONFIG;
      sed -i '' 's/GITHUBUSER/'$githubuser'/' $GITCONFIG;
    else
      echo
      bot "looks like you are already using gnu-sed. woot!"
      sed -i 's/GITHUBEMAIL/'$email'/' $GITCONFIG;
      sed -i 's/GITHUBUSER/'$githubuser'/' $GITCONFIG;
    fi
  fi

  if [ "$NS_PLATFORM" == "darwin" ]; then
    action "Installing Git-Flow"
      require_brew git git-flow gibo
    ok

    action "Writing OS Specific .gitignore_global"
      mv "$HOME/.gitignore_global" "$HOME/.gitignore_global_bak"
      # use gibo to populate a sensible global gitignore
      gibo OSX >> "$HOME/.gitignore_global"
    ok
  fi

  if [ "$NS_PLATFORM" == "linux" ]; then
    action "Installing Git-Flow"
  	 sudo apt-get install -y git git-flow
    ok

    action "Installing GitIgnore Boilerplate Manager"
      curl -L https://raw.github.com/simonwhitaker/gibo/master/gibo -so ~/bin/gibo && chmod +x ~/bin/gibo && gibo -u
    ok

    action "Writing OS Specific .gitignore_global"
      mv "$HOME/.gitignore_global" "$HOME/.gitignore_global_bak"
      # use gibo to populate a sensible global gitignore
      gibo Linux >> "$HOME/.gitignore_global"
    ok
  fi
}

# _cmd_git() {
# }

cmd_git() {
  if [ "$#" -lt 1 ]; then # called with no parameters
    usage; exit 0

  elif [ "$#" -gt 1 ]; then # called with gt 1 parameters
    main "$@"; exit 0

  elif [ "$#" -eq 1 ]; then # called with 1 parameters
    if [[ $1 == "help" ]]; then
      usage; exit 0
    fi

    main $1; exit 0
  fi

  usage; exit 1
}

# cmd_git "$@"
