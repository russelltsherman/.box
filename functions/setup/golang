#!/usr/bin/env bash

# shellcheck disable=SC1090
source "${BOXROOTDIR}/dotfiles/.lib_sh/functions.sh"

usage() {
  echo "usage: box setup golang [directory]"
  echo
}

main() {
  banner
  get_platform
  bot "Installing Golang & dep"

  if [ "$NS_PLATFORM" == "darwin" ]; then
    require_brew go
    require_brew dep
  fi

  if [ "$NS_PLATFORM" == "linux" ]; then
  	sudo apt-get install -y golang
    # TODO: test this
    # curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
  fi

  action "create $HOME/go directory"
  mkdir -p "$HOME/go"

  # initialize GO
  local go_init="
# initialize GO
if [ -d \"\$HOME/src\" ]; then
  GOPATH=\"\$HOME\"
  PATH=\"\${PATH}:\${GOPATH}/bin\"
  GOROOT=\"\$(go env GOROOT)\"
  alias gotour=\"\${GOPATH}/bin/gotour\"
  export GOPATH
  export PATH
  export GOROOT
fi"
  if ! grep -q "# initialize GO" "$HOME/.profile" ; then
    echo "$go_init" >>"$HOME/.profile"
  fi

  source "$HOME/.profile"

  # install the go tour code
  action "install gotour"
  go get golang.org/x/tour/gotour

  action "create go test"
  # create a go test file
  cat > "$GOPATH/bin/gotest.go" <<EOL
  package main
  import(
      "fmt"
  )
  func main() {
    fmt.Println("##################################################################")
    fmt.Println("                         Hello World!")
    fmt.Println("##################################################################")
    fmt.Println("!")
    fmt.Println("!")
    fmt.Println("! if you're seeing this message it means your go installation was successful")
    fmt.Println("!")
    fmt.Println("! take a tour of go by issuing the command ")
    fmt.Println("! $ gotour")
  }
EOL

  # test go install
  go run "$GOPATH/bin/gotest.go"
}

# _cmd_golang() {
#   _alternative "version:Go Version:(1.5.4 1.6.4 1.7.5)"
# }

cmd_golang() {
  if [ "$#" -lt 1 ]; then # called with no parameters
    main; exit 0

  elif [ "$#" -eq 1 ]; then # called with 1 parameters
    if [[ "$1" == "help" ]]; then
      usage; exit 0
    fi

    main "$1"; exit 0
  fi

  usage; exit 1
}

# cmd_golang "$@"
